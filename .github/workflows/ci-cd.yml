# .github/workflows/ci-cd.yml
name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [1.21.x]
        node-version: [18.x]
        python-version: [3.9, 3.10]

    steps:
    - uses: actions/checkout@v4

    - name: Setup Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ matrix.go-version }}

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        cache-dependency-path: ui/package-lock.json

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        cd ui && npm ci
        cd ../backend && go mod download
        cd ../ai-agents && pip install -r requirements.txt

    - name: Run tests
      run: |
        cd backend && go test ./... -v
        cd ../ui && npm test -- --coverage
        cd ../ai-agents && python -m pytest

  security-scan:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Run security scan
      uses: aquasecurity/trivy-action@master
      with:
        scan-type: 'fs'
        scan-ref: '.'
        format: 'sarif'
        output: 'trivy-results.sarif'

  build-docker:
    runs-on: ubuntu-latest
    needs: [test, security-scan]
    steps:
    - uses: actions/checkout@v4
    - name: Build Docker images
      run: |
        docker build -t iran-intel-api -f docker/Dockerfile.api .
        docker build -t iran-intel-ui -f docker/Dockerfile.ui .
        docker build -t iran-intel-ai -f docker/Dockerfile.ai .

  deploy:
    runs-on: ubuntu-latest
    needs: build-docker
    if: github.ref == 'refs/heads/main'
    steps:
    - uses: actions/checkout@v4
    - name: Deploy to production
      run: |
        ./scripts/deploy-production.sh
