name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  go-tests:
    name: Go Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          
      - name: Build and Test API Gateway
        run: |
          if [ -d "services/api-gateway" ]; then
            cd services/api-gateway
            go mod download
            go build -v .
            go test -v ./...
          else
            echo "API Gateway directory not found"
          fi
          
      - name: Build and Test Orchestrator
        run: |
          if [ -d "services/orchestrator" ]; then
            cd services/orchestrator
            go mod download
            go build -v .
            go test -v ./...
          else
            echo "Orchestrator directory not found"
          fi
          
      - name: Build and Test Intelligence Engine
        run: |
          if [ -d "intelligence-engine" ]; then
            cd intelligence-engine
            go mod download
            go build -v .
            go test -v ./...
          else
            echo "Intelligence Engine directory not found"
          fi

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install Python dependencies
        run: |
          if [ -d "services/ai-engine" ]; then
            cd services/ai-engine
            pip install -r requirements.txt
          else
            echo "AI Engine directory not found"
          fi
          
      - name: Run Python tests
        run: |
          if [ -d "services/ai-engine" ]; then
            cd services/ai-engine
            python -m pytest tests/ -v
          else
            echo "AI Engine directory not found"
          fi

  docker-build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [go-tests, python-tests]
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build Docker images
        run: |
          echo "Building Docker images..."
          
          # Build API Gateway if Dockerfile exists
          if [ -f "services/api-gateway/Dockerfile" ]; then
            echo "Building API Gateway..."
            docker build -t osintiran/api-gateway -f services/api-gateway/Dockerfile services/api-gateway
          else
            echo "API Gateway Dockerfile not found"
          fi
          
          # Build Orchestrator if Dockerfile exists
          if [ -f "services/orchestrator/Dockerfile" ]; then
            echo "Building Orchestrator..."
            docker build -t osintiran/orchestrator -f services/orchestrator/Dockerfile services/orchestrator
          else
            echo "Orchestrator Dockerfile not found"
          fi
          
          # Build AI Engine if Dockerfile exists
          if [ -f "services/ai-engine/Dockerfile" ]; then
            echo "Building AI Engine..."
            docker build -t osintiran/ai-engine -f services/ai-engine/Dockerfile services/ai-engine
          else
            echo "AI Engine Dockerfile not found"
          fi
